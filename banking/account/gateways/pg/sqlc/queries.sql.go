// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: queries.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const CreateAccount = `-- name: CreateAccount :exec
insert into accounts (id, user_id, ledger_account_id, created_at)
values (
        $1,
        $2,
        $3,
        $4
)
`

type CreateAccountParams struct {
	ID              pgtype.UUID
	UserID          pgtype.UUID
	LedgerAccountID pgtype.UUID
	CreatedAt       pgtype.Timestamptz
}

func (q *Queries) CreateAccount(ctx context.Context, db DBTX, arg CreateAccountParams) error {
	_, err := db.Exec(ctx, CreateAccount,
		arg.ID,
		arg.UserID,
		arg.LedgerAccountID,
		arg.CreatedAt,
	)
	return err
}

const GetAccount = `-- name: GetAccount :one
select id, user_id, ledger_account_id, created_at
from accounts
where id = $1
`

func (q *Queries) GetAccount(ctx context.Context, db DBTX, id pgtype.UUID) (Account, error) {
	row := db.QueryRow(ctx, GetAccount, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.LedgerAccountID,
		&i.CreatedAt,
	)
	return i, err
}
